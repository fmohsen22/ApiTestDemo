package com.postcodes.helper;import com.google.gson.JsonElement;import com.google.gson.JsonObject;import com.google.gson.JsonParser;import com.postcodes.framework.MyLogger;public class JsonReader {    public static String simpleReader(String jsonFile, String attribut) {        String res ="";        JsonParser jsonParser = new JsonParser();        JsonObject gsonObject = (JsonObject)jsonParser.parse(jsonFile);        if (gsonObject.get(attribut).isJsonNull()){            MyLogger.WarnLog(JsonReader.class, "For the field "+Util.join(attribut)+", there is no result!");            res = null;        }else        res =gsonObject.get(attribut).getAsString();;     return res;    }    /**     * this method findout if the json result is a 2D Array or just one the based on it gives the result as 2D or 1D Array     * @param jsonFile     * @param attribut     * @param targetNames     * @return     */    public static Object[] jsonArray(String jsonFile, String attribut, String ... targetNames)  {        JsonElement jsonElement = null;        String [] output = new String[0];        int maxTargets = targetNames.length;        String[] st = new String[maxTargets];        JsonParser jsonParser = new JsonParser();        JsonObject gsonObject = (JsonObject) jsonParser.parse(jsonFile);        if (gsonObject.get(attribut).isJsonArray()) {            int max = gsonObject.getAsJsonArray(attribut).getAsJsonArray().size();            String[][] results = new String[maxTargets][max];            for (int i = 0; i < max; i++) {                 jsonElement = gsonObject.getAsJsonArray(attribut).getAsJsonArray().get(i);                for (int j = 0; j < maxTargets; j++) {                    st[j] = jsonElement.getAsJsonObject().get(targetNames[j]).toString();                    results[j][i] = st[j];                }            }            return results;        }else {             jsonElement = gsonObject.getAsJsonObject(attribut);            for (int j = 0; j < maxTargets; j++) {                st[j] = jsonElement.getAsJsonObject().get(targetNames[j]).toString();            }            output = st;        }        return output;    }}