package com.postcodes.app;import com.postcodes.app.apiconnector.GetMethods;import com.postcodes.framework.MyLogger;import com.postcodes.helper.JsonReader;import com.postcodes.helper.Util;public class CountryRegion extends POCValidation{    private String country;    private String region;    public CountryRegion(String input) {        super(input);    }    public static CountryRegion of(String input){return new CountryRegion(input);}    public String getCountry() {        return country;    }    public String getRegion() {        return region;    }    public void setCountry(String country) {        this.country = country;    }    public void setRegion(String region) {        this.region = region;    }    public CountryRegion withCountry(String country) {        this.country = country;        return this;    }    public CountryRegion withRegion(String region) {        this.region = region;        return this;    }    public CountryRegion findCountryRegion(){        if (isValidCode()){            // @formatter: off            String jsoncontent  = GetMethods.simpleGetRequest(                    config().getProperty("base.url").                     concat(config().getProperty("postcodes.path"))+getInput());            String country = JsonReader.jsonArray(                    jsoncontent, "result", "country","region")[0].                    toString();            String region = JsonReader.jsonArray(                    jsoncontent, "result", "country","region")[1].                    toString();            // @formatter: on            setCountry(country);            setRegion(region);        }else {            MyLogger.ErrorLog(GetMethods.class, "Entered Code " + Util.join(getInput()) + "is not a valid UK Postcode!");            setCountry(null);            setRegion(null);        }        return this;    }}